{"ast":null,"code":"var _jsxFileName = \"/Users/pstoyanov/Downloads/NBU/INFM316 \\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430 \\u043D\\u0430 \\u0441\\u043E\\u0444\\u0442\\u0443\\u0435\\u0440 \\u043A\\u0430\\u0442\\u043E \\u0443\\u0441\\u043B\\u0443\\u0433\\u0430/INFM316_Petar_Stoyanov_F102248/src/components/Hangman/Hangman.js\";\nimport React, { Component } from 'react';\nimport './Hangman.css';\nimport { randomWord } from './Words.js';\nimport step0 from \"../../assets/hangman/hangman_0.jpg\";\nimport step1 from \"../../assets/hangman/hangman_1.jpg\";\nimport step2 from \"../../assets/hangman/hangman_2.jpg\";\nimport step3 from \"../../assets/hangman/hangman_3.jpg\";\nimport step4 from \"../../assets/hangman/hangman_4.jpg\";\nimport step5 from \"../../assets/hangman/hangman_5.jpg\";\nimport step6 from \"../../assets/hangman/hangman_6.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Hangman extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleGuess = event => {\n      let letter = event.target.value;\n      this.setState(state => ({\n        selectedLetters: state.selectedLetters.add(letter),\n        mistake: state.mistake + (state.answer.includes(letter) ? 0 : 1)\n      }));\n    };\n\n    this.resetButton = () => {\n      this.setState({\n        mistake: 0,\n        selectedLetters: new Set([]),\n        answer: randomWord()\n      });\n    };\n\n    this.state = {\n      mistake: 0,\n      selectedLetters: new Set([]),\n      answer: randomWord()\n    };\n  }\n\n  guessedWord() {\n    return this.state.answer.split(\"\").map(letter => this.state.selectedLetters.has(letter) ? letter : \" _ \");\n  }\n\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-lg btn-dark\",\n      value: letter,\n      onClick: this.handleGuess,\n      disabled: this.state.selectedLetters.has(letter),\n      children: letter\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this));\n  }\n\n  render() {\n    const gameOver = this.state.mistake >= this.props.maxWrong;\n    const isWinner = this.guessedWord().join(\"\") === this.state.answer;\n    let gameStat = this.generateButtons();\n\n    if (isWinner) {\n      gameStat = \"You Won!!!\";\n    }\n\n    if (gameOver) {\n      gameStat = \"You Lost!!!\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Hangman container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Hangman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"float-right\",\n        children: [\"Wrong Guesses: \", this.state.mistake, \" of \", this.props.maxWrong]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.props.images[this.state.mistake],\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Guess the Programming Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: !gameOver ? this.guessedWord() : this.state.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: gameStat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: this.resetButton,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nHangman.defaultProps = {\n  maxWrong: 6,\n  images: [step0, step1, step2, step3, step4, step5, step6]\n};\nexport default Hangman;","map":{"version":3,"sources":["/Users/pstoyanov/Downloads/NBU/INFM316 Разработка на софтуер като услуга/INFM316_Petar_Stoyanov_F102248/src/components/Hangman/Hangman.js"],"names":["React","Component","randomWord","step0","step1","step2","step3","step4","step5","step6","Hangman","constructor","props","handleGuess","event","letter","target","value","setState","state","selectedLetters","add","mistake","answer","includes","resetButton","Set","guessedWord","split","map","has","generateButtons","render","gameOver","maxWrong","isWinner","join","gameStat","images","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Hangman.css';\nimport { randomWord } from './Words.js';\n\nimport step0 from \"../../assets/hangman/hangman_0.jpg\";\nimport step1 from \"../../assets/hangman/hangman_1.jpg\";\nimport step2 from \"../../assets/hangman/hangman_2.jpg\";\nimport step3 from \"../../assets/hangman/hangman_3.jpg\";\nimport step4 from \"../../assets/hangman/hangman_4.jpg\";\nimport step5 from \"../../assets/hangman/hangman_5.jpg\";\nimport step6 from \"../../assets/hangman/hangman_6.jpg\";\n\nclass Hangman extends Component {\n  static defaultProps = {\n    maxWrong: 6,\n    images: [step0, step1, step2, step3, step4, step5, step6]\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mistake: 0,\n      selectedLetters: new Set([]),\n      answer: randomWord()\n    }\n  }\n\n  handleGuess = event => {\n    let letter = event.target.value;\n    this.setState(state => ({\n      selectedLetters: state.selectedLetters.add(letter),\n      mistake: state.mistake + (state.answer.includes(letter) ? 0 : 1)\n    }));\n  }\n\n  guessedWord() {\n    return this.state.answer.split(\"\").map(letter => (this.state.selectedLetters.has(letter) ? letter : \" _ \"));\n  }\n\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(letter => (\n      <button\n        class='btn btn-lg btn-dark'\n        key={letter}\n        value={letter}\n        onClick={this.handleGuess}\n        disabled={this.state.selectedLetters.has(letter)}\n      >\n        {letter}\n      </button>\n    ));\n  }\n\n  resetButton = () => {\n    this.setState({\n      mistake: 0,\n      selectedLetters: new Set([]),\n      answer: randomWord()\n    });\n  }\n\n  render() {\n    const gameOver = this.state.mistake >= this.props.maxWrong;\n    const isWinner = this.guessedWord().join(\"\") === this.state.answer;\n    let gameStat = this.generateButtons();\n\n    if (isWinner) {\n      gameStat = \"You Won!!!\"\n    }\n\n    if (gameOver) {\n      gameStat = \"You Lost!!!\"\n    }\n\n    return (\n      <div className=\"Hangman container\">\n        <h1 className='text-center'>Hangman</h1>\n        <div className=\"float-right\">Wrong Guesses: {this.state.mistake} of {this.props.maxWrong}</div>\n        <div className=\"text-center\">\n          <img src={this.props.images[this.state.mistake]} alt=\"\"/>\n        </div>\n        <div className=\"text-center\">\n          <p>Guess the Programming Language:</p>\n          <p>\n            {!gameOver ? this.guessedWord() : this.state.answer}\n          </p>\n          <p>{gameStat}</p>\n          <button className='btn btn-danger' onClick={this.resetButton}>Reset</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Hangman;\n"]},"metadata":{},"sourceType":"module"}